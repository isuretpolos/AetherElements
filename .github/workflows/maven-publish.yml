# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: project
    - name: Show extracted Maven project version
      run: echo ${{ steps.project.outputs.version }}
    - name: Upload Artifact after Action Run
      run: |
        mkdir -p release/
        cp aether-server/target/server***.jar release/aether-server-${{ steps.project.outputs.version }}.jar;
        cp LICENSE release/;
        cd release
        echo "java jar aether-server-${{ steps.project.outputs.version }}.jar" >> start-server.bat
        echo "java jar aether-server-${{ steps.project.outputs.version }}.jar" >> start-server.sh
        chmod 755 start-server.sh
        ls -l;
        cd ..
    - uses: actions/upload-artifact@master
      with:
        name: aether-server-${{ steps.project.outputs.version }}
        path: release

    #- name: Publish to GitHub Packages Apache Maven
    #  run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}
